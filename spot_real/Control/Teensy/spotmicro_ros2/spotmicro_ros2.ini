#include <micro_ros_arduino.h>

#include <stdio.h>
#include <rcl/rcl.h>
#include <rcl/error_handling.h>
#include <rclc/rclc.h>
#include <rclc/executor.h>

#include <Adafruit_PWMServoDriver.h>

#include "lib/SpotServo/SpotServo.hpp"
#include "lib/ContactSensor/ContactSensor.hpp"
#include "lib/Kinematics/Kinematics.hpp"
#include "lib/Utilities/Utilities.hpp"

#define LED_PIN 13

#define SERVO_OSC_FREQ 25000000
#define SERVO_FREQ 60
#define SERVO_OE_PIN 15

#define RCCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){error_loop();}}
#define RCSOFTCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){error_loop();}}

rcl_subscription_t subscriber;
rclc_executor_t executor;
rcl_allocator_t allocator;
rclc_support_t support;
rcl_node_t node;

// PWM controller object that is passed to servos
Adafruit_PWMServoDriver pwm1 = Adafruit_PWMServoDriver(0x40);


void error_loop(){
  while(1){
    digitalWrite(LED_PIN, !digitalRead(LED_PIN));
    delay(100);
  }
}

void setup() {
  set_microros_transports();
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, HIGH);  
  
  pwm1.begin()
  pwm1.setOscillatorFrequency(SERVO_OSC_FREQ);
  pwm1.setPWMFreq(SERVO_FREQ);

  delay(2000);

  allocator = rcl_get_default_allocator();

  //create init_options
  RCCHECK(rclc_support_init(&support, 0, NULL, &allocator));

  // create nodes
  // TODO: IMU, ServoHandler, Contacts



  // create subscribers and publishers

  // create executor
  RCCHECK(rclc_executor_init(&executor, &support.context, 1, &allocator));
  RCCHECK(rclc_executor_add_subscription(&executor, &subscriber, &msg, &subscription_callback, ON_NEW_DATA));

}

void loop() {
  // we want 50Hz rate on publishers
  // but fast-as-we-can on controller stuff
  delay(100);
  RCCHECK(rclc_executor_spin_some(&executor, RCL_MS_TO_NS(100)));
}